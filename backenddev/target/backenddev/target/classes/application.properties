server.port = 8100
spring.jackson.mapper.accept-case-insensitive-properties=true
apiKey = myapikey123
#if more than one API Key is available
# apikey = myapikey123, yourapikey123

#actuator turn on everything
management.endpoint.health.show-details=always

# PostgreSQL Set up
spring.datasource.url = jdbc:postgresql://localhost:5432/postgres
spring.datasource.username = postgres
spring.datasource.password = Solob4life

#spring.datasource.hikari.connectionTimeout = 20000
#spring.datasource.hikari.maximumPoolSize = 5
#
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true


spring.jpa.show-sql = true

# Create SQL Schema statements
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata

#Create / Update schema entity based on Entity metadata
spring.jpa.hibernate.ddl-auto=update

# displaying server error messages
server.error.include-message=always

#API Documentation url
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

